JSX / Babel 

JSX는 HTML 기본 요소를 사용할 수 있도록 지원

JavaScrtipt XML 줄임말

자바스크림트에 XML 또는 HTML을 추가한확장형 문법

트리구조를 정의할 때 사용

JSX 표현은 JavaScript 엔진이 그 파일을 분석하기 전에 반드시 JavaScript 문법으로 변환되어야 한다.

Babel은 JSX 표현을 변환하는데 일반적으로 사용

브라우저에서 실행하기 전에 바벨을 사용하여 일반 자바스크립트 형태의 코드로 변환된다.

ReactDOMRender
- 컴포넌트(함수)를 페이지에 렌더링 하는 역할을 하며 react-dom 모듈을 불러와 사용

ReactStrictMode
- 리액트 프로젝트에서 리액트의 레거시 기능을 사용하지 못하게 하는 기능(경고출력)

반드시 부모 요소 하나가 감싸는 형태여야 한다.

리액트 16이상부터 Fragment를 사요애서 표현할 수 있다.

JSX에서 자바스크립트 표현은 { }을 사용한다.

if 대신에 조건부 연산자를 사용한다.

요소 속성에서 class 대신 className 사용

리액트는 컴포넌트 기반의 라이브러리이다.

컴포넌트를 만드는 방법은 class와 function 두 가지가 있다.



react-dom

웹 브라우저에서는 html, css, js만 동작한다.

리액트는 자바스크립트를 이용. 컴포넌트를 만든다. babel을 이용해 순수 자바스크립트로 변환이 된다.

변환된 컴포넌트를 HTML과 연결 작업을 하는 것이 react-dom이다.

index.html - 사용자에게 궁극적으로 전달되는 html, root div에 결과물이 들어간다.

index.js : index.html에 있는 root div에 app 컴포넌트를 넣는다.


component

MVC의 view를 독립적으로 구성하여 재사용할 수 있도록 하나의 작업을 독립적으로 구현해 놓은 단위

프로퍼티 : 상위 컴포넌트에서 하위 컴포넌트로 전달되는 읽기 전용 데이터이다.

state : 컴포넌트의 상태를 저장하고 변경할 수 있는 데이터이다.(비동기)

컨텍스트 : 부모 컴포넌트에서 생성하여 모든 자식 컴포넌트에 전달


이벤트 핸들링

리액트에서 이벤트 이름은 카멜 표기법으로 작성한다.

이벤트에 실행할 자바스크립트 코드를 전달하는 것이 아닌 함수 형태의 값을 전달한다.

DOM 요소에만 이벤트 설정 가능(사용자가 정의한 컴포넌트에는 이벤트 설정이 불가능하다.)


Hooks

state관리와 LifeCycle 등을 함수형 컴포넌트에서 사용할 수 있게 한 기능

상태관리 : useState() / useRef() / userReducer()

useState
- state는 컴포넌트 내부에서 동적으로 바뀔 수 있는 값을 의미
- 비동기적으로 처리
- setState 하수를 통해서 state 변수의 값을 수정하며 변경된 값을 보고 화면을 다시 수정한다.(리렌더링 발생)
- 리액트는 성능을 최적화하기 위해 setState를 배치 처리한다.

리렌더링 : 화면이 바뀐다.